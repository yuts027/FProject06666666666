@model FProjectCampingBackend.Models.ViewModels.Members.MemberEditVm

@{
    ViewBag.Title = "Edit";
}



<div class="container text-center">
    <div class="editarea">
        <div class="editleftarea">
            
               
            <div class="mb-3">
                <div class="memberPhoto">
                    @if (Model.Photo == null)
                    {
                       
                            <img src="/images/camping_no.jpg" alt="大頭照" class="img-fluid memberPhoto">
                    
                    }
                    else
                    {
                        <img src="/files/@Html.DisplayFor(model => model.Photo)" alt=" model.Account" class="img-fluid" />

                    }
                </div>
            </div>

            <div class="mb-3">
                @Html.LabelFor(model => model.Account, htmlAttributes: new { @class = "" })

                @Html.DisplayFor(model => model.Account, new { htmlAttributes = new { @class = "form-control" } })

            </div>
        </div>

        <div class="mainright">
            <h2 class="mainright_title">編輯會員權限</h2>

            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

        <div class="form-horizontal editrightarea">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

            <div class="mb-3 right1">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "" })

                @Html.TextBoxFor(model => model.Name, new { @class = "form-control", @readonly = "readonly", @disabled = "disabled" })


            </div>

            <div class="mb-3 right1">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "form-label" })

                @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @readonly = "readonly", @disabled = "disabled" })

                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })

            </div>

            <div class="mb-3 right1">
                @Html.LabelFor(model => model.PhoneNum, htmlAttributes: new { @class = "form-label" })

                @Html.TextBoxFor(model => model.PhoneNum, new { @class = "form-control", @readonly = "readonly", @disabled = "disabled" })

            </div>

            <div class="mb-3 right1">
                @Html.LabelFor(model => model.Birthday, htmlAttributes: new { @class = "form-label" })
                @Html.TextBoxFor(model => model.FormattedBirthday, new { @class = "form-control", @readonly = "readonly", @disabled = "disabled" })

            </div>

            <div class="mb-3 right1">


                <div class="checkbox">
                    @Html.LabelFor(model => model.IsConfirmed, htmlAttributes: new { @class = "form-label " })
                    @Html.DisplayFor(model => model.IsConfirmedDisplayName)

                </div>

            </div>

            <div class="mb-3 right1">
                @Html.LabelFor(model => model.ConfirmCode, htmlAttributes: new { @class = "form-label" })

                @Html.DisplayFor(model => model.ConfirmCode, new { htmlAttributes = new { @class = "form-control" } })
            </div>
            <div class="mb-3 right1">


                <div class="checkbox">
                    @Html.LabelFor(model => model.Enabled, htmlAttributes: new { @class = "" })
                    @Html.EditorFor(model => model.Enabled)
                    @Html.ValidationMessageFor(model => model.Enabled, "", new { @class = "text-danger" })
                </div>

            </div>



            <div class="mb-3 right1">
                @Html.LabelFor(model => model.CreatedTime, htmlAttributes: new { @class = "" })

                @Html.DisplayFor(model => model.CreatedTime, new { htmlAttributes = new { @class = "form-control" } })

            </div>




        </div>
                <div class="mb-3">
                    <div class="text-end">
                        <input type="submit" value="存檔" class="btn btn-dark" />
                    </div>
                </div>
            }
        </div>

    </div>
    <div>
        <div class="text-end mt-3 backtomember">
            <i class="bi bi-arrow-left-square-fill"></i>
            @Html.ActionLink("回到會員管理", "Index")
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

@section css{
    <link rel="stylesheet" href="~/css/memberedit.css">

}